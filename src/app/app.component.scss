app-root {
  display: grid;
  height: 100vh;
  align-items: center;
  justify-items: center;
  grid-template-areas:
    "header header header"
    "settings state form"
    "settings chess form";
  grid-template-rows: 3.5rem max-content auto;
  grid-template-columns: 1fr auto 1fr;
  justify-content: space-around;
  grid-gap: 1rem;
  app-table {
    .table-container {
      overflow-x: hidden;
    }
  }

  label:not(.mat-form-field-label) {
    justify-self: flex-end;
    text-align: right;
  }

  .form-element {
    padding: var(--form-margin);
    border-radius: 3px;
  }

  .app-algorithm-config-view, .app-form-view, .app-state-view {
    align-self: flex-start;
    $expected-width: min(30rem, 100%) ;
    width: $expected-width;
    @supports not(width: $expected-width) {
      width: 100%;
      max-width: 30rem;
    }
  }

  app-algorithm-config-view, app-form-view {
    grid-row-gap: 0.5rem;
    display: grid;
  }

  app-chess-view {
    grid-area: chess;
    align-self: flex-start;
  }

  .app-form-view {
    grid-area: form;
  }

  .app-state-view {
    grid-area: state;
  }

  app-header {
    grid-area: header;
  }

  .app-algorithm-config-view {
    grid-area: settings;
  }

  app-slider, app-generic-form form {
    .mat-slider, mat-form-field {
      padding: 0 0.5rem;
    }

    .mat-form-field {
      margin-top: .5em;

      .mat-form-field-wrapper {
        padding-bottom: 1em;

        .mat-form-field-infix {
          border-top: 0;
          padding-top: 0;
        }
      }
    }

    display: grid;

    > * {
      align-self: center;
    }

    label {
      grid-column: 1/3;
    }

    grid-template-columns: 2.5rem 1fr 1fr 2.5rem;
    grid-column-gap: .625rem;
  }

  @supports not (width: min(10rem, 10%)) {
    @media screen and (min-width: 71.25001rem) {
      app-chess-view {
        width: 40vw;
        height: 40vw;
      }
    }
  }

  @media screen and (max-width: 87rem) and (min-width: 71.25rem) {
    $template-cols: auto 2.5rem;
    .app-algorithm-config-view {
      @supports not (width: min(10rem, 10%)) {
        max-width: 30rem;
        width: 20vw;
      }

      app-generic-form form {
        grid-template-columns: $template-cols;

        label {
          text-align: left;
          justify-self: flex-start;
        }

        app-slider {
          grid-column: 1/3;
          grid-template-columns: $template-cols;
        }
      }
    }

  }
  @media screen and (max-width: 71.2499rem) {
    grid-template-areas:
      "header header"
      "state chess"
      "settings chess"
      "settings form";
    grid-template-columns: 1fr 1fr;

    app-chess-view {
      $max-chess-size: 45vw;
      height: $max-chess-size !important;
      width: $max-chess-size !important;
    }
  }

  @media screen and (max-width: 53.5rem) {
    grid-template-areas:
      "header"
      "state"
      "chess"
      "form"
      "settings";
    grid-template-columns: 1fr;
    .form-element {
      $expected-card-width: max(30rem, 90vw);
      width: $expected-card-width !important;
      @supports not (width: $expected-card-width) {
        $card-width: 90vw;
        width: $card-width !important;
      }
    }
    app-chess-view {
      $max-chess-size: max(20rem, min(50vh, max(30rem, 90vw)));
      width: $max-chess-size;
      height: $max-chess-size;
      @supports not (height: $max-chess-size) {
        $max-chess-size: 90vw;
        height: $max-chess-size !important;
        width: $max-chess-size !important;
      }
    }
  }
}
